# Generated by Django 5.0.4 on 2024-05-22 13:41

from django.db import migrations
# Generated by Django 5.0.4 on 2024-05-22 11:22

from os import name
from django.db import migrations
from clean_text_rhoni import clean_text_snake_case


DATA = [
    {'name': 'no_isolation_time', 'label': "No", 'isolation_time': None, 'isolation_unit': 'no', 'with_atb': None, 'other_isolation': None},
    {'name': None, 'label': None, 'isolation_time': 7, 'isolation_unit': 'days', 'with_atb': None, 'other_isolation': None},
    {'name': None, 'label': None, 'isolation_time': 6, 'isolation_unit': 'months', 'with_atb': None, 'other_isolation': None},
    {'name': None, 'label': None, 'isolation_time': 14, 'isolation_unit': 'days', 'with_atb': True, 'other_isolation': None},
    {'name': None, 'label': None, 'isolation_time': 1, 'isolation_unit': 'years', 'with_atb': None, 'other_isolation': None},
    {'name': 'medical_discharge', 'label': 'Alta médica', 'isolation_time': None, 'isolation_unit': 'medical_discharge', 'with_atb': None, 'other_isolation': None},
    {'name': 'death', 'label': 'Muerte', 'isolation_time': None, 'isolation_unit': 'death', 'with_atb': None, 'other_isolation': None},
    {'name': 'rubeola', 'label': 'Rubeola', 'isolation_time': None, 'isolation_unit': None, 'with_atb': None, 'other_isolation': 'El periodo de incubación de la rubéola oscila entre 14 y 18 días, con una rango de 12 a 23 días.'},
    {'name': 'sarampion', 'label': 'Sarampión', 'isolation_time': None, 'isolation_unit': None, 'with_atb': None, 'other_isolation': 'El período de incubación dura aproximadamente 10 días, y varía de 7 a 18 días desde la exposición hasta el comienzo de la fiebre, y unos 14 días hasta que aparece la erupción, con un rango de 7 a 21 días.'},
    {'name': None, 'label': None, 'isolation_time': 5, 'isolation_unit': 'days', 'with_atb': True, 'other_isolation': None},
    {'name': None, 'label': None, 'isolation_time': 21, 'isolation_unit': 'days', 'with_atb': False, 'other_isolation': None},
    {'name': None, 'label': None, 'isolation_time': None, 'isolation_unit': 'days', 'with_atb': False, 'other_isolation': 'Hasta 2 cultivos negativos de la lesión cutánea'},
]

model_name = 'IsolationTime'


def get_name_and_label(each_entry):
    """builds a name and a label for entries"""
    isolation_name = each_entry.get('name')
    isolation_label = each_entry.get('label')
    isolation_time = each_entry.get('isolation_time')
    isolation_unit = each_entry.get('isolation_unit')
    other_isolation = each_entry.get('other_isolation')
    if isolation_name is None:
        if other_isolation is not None:
            isolation_name = f'{other_isolation}'
            isolation_label = isolation_name
        if None not in (isolation_time, isolation_unit):
            isolation_name = f'{isolation_time}_{isolation_unit}'
            isolation_label = isolation_name
    return {'name': isolation_name, 'label': isolation_label}

def get_isolation_unit_instance(each_entry, apps):
    """get the instance of isolation unit if is present"""
    isolation_unit_model = apps.get_model('backend', 'UnitsOfTime')
    isolation_unit = each_entry.get("isolation_unit")
    if isolation_unit is not None:
        unit_instance = isolation_unit_model.objects.get(name=isolation_unit)
        return unit_instance
    return None

def insert_data(apps, schema_editor):
    """Inserting dimensions"""
    model = apps.get_model('backend', model_name)
    for each_entry in DATA:
        isolation_name = get_name_and_label(each_entry)['name']
        clean_entry = clean_text_snake_case(isolation_name)
        each_entry['name'] = clean_entry
        each_entry['label'] = get_name_and_label(each_entry)['label']
        each_entry['isolation_unit'] = get_isolation_unit_instance(each_entry, apps)
        entry = model.objects.create(**each_entry)
        entry.save()


class Migration(migrations.Migration):

    dependencies = [
        ('backend', '0005_units_of_time'),
    ]

    operations = [
        migrations.RunPython(insert_data)
    ]
